{"ast":null,"code":"var _jsxFileName = \"/Users/zeneng/Documents/MCIT550/covid_node/client/src/components/Dashboard.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      posts: []\n    }; //this.showMovies = this.showMovies.bind(this);\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    console.log('I was triggered during componentDidMount'); // Send an HTTP request to the server.\n\n    fetch(\"http://localhost:8081/genres\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      res.json();\n    }).then(posts => {\n      this.setState({\n        posts\n      });\n    }).then(err => {\n      // Print the error if there is one.\n      console.log(err);\n    }); //.then(genreList => {\n    //if (!genreList) return;\n    // Map each genreObj in genreList to an HTML element:\n    // A button which triggers the showMovies function for each genre.\n    //let genreDivs = genreList.map((genreObj, i) =>\n    //<GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} />\n    //);\n    // Set the state of the genres list to the value returned by the HTTP response from the server.\n    //this.setState({\n    //genres: genreDivs\n    //});\n    //}, err => {\n    // Print the error if there is one.\n    //console.log(err);\n    //});\n  }\n  /* ---- Q1b (Dashboard) ---- */\n\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, this.state.posts.map(post => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Some Text_1: \", post.db_col_1), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Some Text_2: \", post.db_col_2)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/zeneng/Documents/MCIT550/covid_node/client/src/components/Dashboard.js"],"names":["React","PageNavbar","GenreButton","DashboardMovieRow","Dashboard","Component","constructor","props","state","posts","componentDidMount","console","log","fetch","method","then","res","json","setState","err","render","map","post","db_col_1","db_col_2"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,OAAO,sCAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,eAAe,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;AACA;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb,CALiB,CASjB;AACD,GAXoD,CAarD;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EADkB,CAElB;;AACAC,IAAAA,KAAK,CAAC,8BAAD,EACL;AACEC,MAAAA,MAAM,EAAE,KADV,CACgB;;AADhB,KADK,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAI;AACb;AACAA,MAAAA,GAAG,CAACC,IAAJ;AACD,KAND,EAMGF,IANH,CAMQN,KAAK,IAAI;AACb,WAAKS,QAAL,CAAc;AAACT,QAAAA;AAAD,OAAd;AACD,KARH,EAQKM,IARL,CAQUI,GAAG,IAAI;AACf;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,KAXD,EAHkB,CAgBlB;AACE;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACE;AACF;AACF;AACE;AACA;AACF;AACD;AAGD;;AACA;;;AAEFC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWC,KAAX,CAAiBY,GAAjB,CAAqBC,IAAI,iBACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBA,IAAI,CAACC,QAAvB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBD,IAAI,CAACE,QAAvB,CAFF,CADD,CADH,CADF,CADF;AAYD;;AAnEoD","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      posts: []\n    }\n\n    //this.showMovies = this.showMovies.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    console.log('I was triggered during componentDidMount')\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\",\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      res.json();\n    }).then(posts => {\n        this.setState({posts});\n      }).then(err => {\n      // Print the error if there is one.\n      console.log(err);\n    })\n    \n    //.then(genreList => {\n      //if (!genreList) return;\n      // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n      //let genreDivs = genreList.map((genreObj, i) =>\n      //<GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} />\n      //);\n\n      \n\n      // Set the state of the genres list to the value returned by the HTTP response from the server.\n      //this.setState({\n        //genres: genreDivs\n      //});\n    //}, err => {\n      // Print the error if there is one.\n      //console.log(err);\n    //});\n  }\n\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  \nrender() {\n    return (\n      <div>\n        <ul>\n          {this.state.posts.map(post => (\n            <p>\n              <li>Some Text_1: {post.db_col_1}</li>\n              <li>Some Text_2: {post.db_col_2}</li>\n            </p>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}